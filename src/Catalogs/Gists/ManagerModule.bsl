#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПрочитатьGists() Экспорт

	Автор = Пользователи.ТекущийПользователь();

	Если ПустаяСтрока(GistsПовтИсп.ТокенАвтора()) Тогда
		Возврат;
	КонецЕсли;
	
	Данные = GistsКлиентСервер.ЗначениеИзСтрокиJSOM(ВызватьHTTPМетод().ПолучитьТелоКакСтроку(), Истина,
		"created_at,updated_at");

	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("id", ОбщегоНазначения.ОписаниеТипаСтрока(50));
	ТЗ.Колонки.Добавить("updated_at", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТЗ.Колонки.Добавить("Gist", Новый ОписаниеТипов("Соответствие"));
	Для Каждого Элемент Из Данные Цикл
		НоваяСтрока = ТЗ.Добавить();
		НоваяСтрока.id = Элемент["id"];
		НоваяСтрока.updated_at = Элемент["updated_at"];
		НоваяСтрока.Gist = Элемент;
	КонецЦикла;
	ТЗ.Индексы.Добавить("id");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	Т.id КАК id,
				   |	Т.updated_at КАК updated_at
				   |ПОМЕСТИТЬ ТЗ
				   |ИЗ
				   |	&ТЗ КАК Т
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	Gists.Ссылка КАК Ссылка,
				   |	ЕСТЬNULL(Gists.Идентификатор, ТЗ.id) КАК Идентификатор,
				   |	Gists.ДатаИзменения КАК ДатаИзменения,
				   |	ТЗ.updated_at КАК updated_at
				   |ИЗ
				   |	ТЗ КАК ТЗ
				   |		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Gists КАК Gists
				   |		ПО ТЗ.id = Gists.Идентификатор
				   |			И (Gists.Автор = &Автор)
				   |ГДЕ
				   |	(НЕ Gists.ДатаИзменения = ТЗ.updated_at
				   |			ИЛИ Gists.Ссылка ЕСТЬ NULL)";
	Запрос.УстановитьПараметр("ТЗ", ТЗ);
	Запрос.УстановитьПараметр("Автор", Автор);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;

	RegExp = Новый COMОбъект("VBScript.RegExp");
	RegExp.Global = Истина;
	RegExp.Multiline = Истина;
	RegExp.IgnoreCase = Истина;
		
	ВыборкаGists = РезультатЗапроса.Выбрать();
	Пока ВыборкаGists.Следующий() Цикл

		Если ВыборкаGists.Ссылка = Null Тогда
			НовыйGist = Справочники.Gists.СоздатьЭлемент();
		ИначеЕсли ВыборкаGists.updated_at = Null Тогда
			ВыборкаGists.Ссылка.ПолучитьОбъект().Удалить();
			Продолжить;
		ИначеЕсли ВыборкаGists.ДатаИзменения < ВыборкаGists.updated_at Тогда
			НовыйGist = ВыборкаGists.Ссылка.ПолучитьОбъект();
		Иначе
			Продолжить; // отправка при записи
		КонецЕсли;

		Gist = ТЗ.Найти(ВыборкаGists.Идентификатор, "id").Gist;

		НовыйGist.Автор = Автор;
		
		ОбновитьGist(НовыйGist, Gist, Истина);
		
		НовыйGist.ОписаниеБезТегов = НовыйGist.Описание;
		НовыйGist.Теги.Очистить();
		ТЗ1 = Новый ТаблицаЗначений;
		ТЗ1.Колонки.Добавить("Тег", ОбщегоНазначения.ОписаниеТипаСтрока(50));
		RegExp.Pattern = "#([^#\s]+)";
		Для Каждого Вхождение Из RegExp.Execute(НовыйGist.Описание) Цикл
			ТЗ1.Добавить().Тег = Вхождение.SubMatches(0);
			НовыйGist.ОписаниеБезТегов = СтрЗаменить(НовыйGist.ОписаниеБезТегов, Вхождение.Value, "");
		КонецЦикла;
		RegExp.Pattern = "\s+";
		НовыйGist.ОписаниеБезТегов = СокрЛП(RegExp.Replace(НовыйGist.ОписаниеБезТегов, " "));
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
					   |	ТЗ.Тег КАК Тег
					   |ПОМЕСТИТЬ ТЗ
					   |ИЗ
					   |	&ТЗ КАК ТЗ
					   |;
					   |
					   |////////////////////////////////////////////////////////////////////////////////
					   |ВЫБРАТЬ
					   |	ТЗ.Тег КАК Тег,
					   |	Теги.Ссылка КАК Ссылка
					   |ИЗ
					   |	ТЗ КАК ТЗ
					   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Теги КАК Теги
					   |		ПО ТЗ.Тег = Теги.Наименование";
		Запрос.УстановитьПараметр("ТЗ", ТЗ1);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.Ссылка = Null Тогда
				НовыйТег = Справочники.Теги.СоздатьЭлемент();
				НовыйТег.Автор = Автор;
				НовыйТег.Наименование = Выборка.Тег;
				НовыйТег.Записать();
				НовыйGist.Теги.Добавить().Тег = НовыйТег.Ссылка;
			Иначе
				НовыйGist.Теги.Добавить().Тег = Выборка.Ссылка;
			КонецЕсли;
		КонецЦикла;
		Если Не ПустаяСтрока(НовыйGist.ОписаниеБезТегов) Тогда
			ТЗ1.Вставить(0).Тег = НовыйGist.ОписаниеБезТегов;
		КонецЕсли;
		НовыйGist.Описание = СтрСоединить(ТЗ1.ВыгрузитьКолонку(0), " ");
		
		НовыйGist.Записать();

	КонецЦикла;

КонецПроцедуры

Процедура ЗаписатьGist(Идентификатор, Объект) Экспорт

	Если ПустаяСтрока(GistsПовтИсп.ТокенАвтора()) Тогда
		Возврат;
	КонецЕсли;

	Данные = Новый Соответствие;
	Данные.Вставить("description", Объект.Описание);
	Данные.Вставить("public", Объект.Открытый);
	files = Новый Соответствие;
	Для Каждого Элемент Из Объект.Файлы Цикл

		Файл = Новый Соответствие;
		Файл.Вставить("filename", Элемент.Имя);
		Файл.Вставить("type", Элемент.Тип);
		Файл.Вставить("language", Элемент.Язык);
		Файл.Вставить("content", Элемент.Тело);

		files.Вставить(Элемент.Имя, Файл);

	КонецЦикла;
	Данные.Вставить("files", files);

	ОбновитьGist(Объект, GistsКлиентСервер.ЗначениеИзСтрокиJSOM(ВызватьHTTPМетод(Идентификатор, "POST",
		GistsКлиентСервер.ЗначениеВСтрокуJSOM(Данные), ?(ПустаяСтрока(Идентификатор), 201,
		200)).ПолучитьТелоКакСтроку(), Истина, "created_at,updated_at"), Ложь);
	
КонецПроцедуры

Процедура УдалитьGist(Идентификатор) Экспорт

	Если Не ПустаяСтрока(Идентификатор) Тогда
		ВызватьHTTPМетод(Идентификатор, "DELETE",, 204);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьGist(Объект, Данные, getFiles)

	Если Данные["id"] = Неопределено Или Данные["files"] = Неопределено Тогда
		ВызватьИсключение "ru = 'Ключевое поле не обнаружено!'";
	КонецЕсли;

	Объект.Идентификатор = Данные["id"];
	
	Поля = Новый Структура;
	Поля.Вставить("Адрес", "html_url");
	Поля.Вставить("ДатаСоздания", "created_at");
	Поля.Вставить("ДатаИзменения", "updated_at");
	Поля.Вставить("Описание", "description");
	Поля.Вставить("Открытый", "public");
	Поля.Вставить("Усечение", "truncated");
	
	УстановитьЗначениеСоответствия(Объект, Данные, Поля);
	
	Если getFiles Тогда
		Объект.Файлы.Очистить();
		Данные = GistsКлиентСервер.ЗначениеИзСтрокиJSOM(ВызватьHTTPМетод(Данные["id"]).ПолучитьТелоКакСтроку(), Истина);
	КонецЕсли;
	Поля = Новый Структура;
	Поля.Вставить("Тип", "type");
	Поля.Вставить("Язык", "language");
	Поля.Вставить("Адрес", "raw_url");
	Поля.Вставить("Размер", "size");
	Поля.Вставить("Усечение", "truncated");
	Поля.Вставить("Тело", "content");
	Для Каждого Элемент Из Данные["files"] Цикл
		Файл = ?(getFiles, Объект.Файлы.Добавить(), Объект.Файлы.Найти(Элемент.Значение["filename"], "Имя"));
		Файл.Имя = Элемент.Значение["filename"];
		УстановитьЗначениеСоответствия(Файл, Элемент.Значение, Поля);
		Позиция = СтрНайти(Файл.Имя, ".", НаправлениеПоиска.СКонца);
		Файл.ИмяБезРасширения = Лев(Файл.Имя, Позиция - 1);
		Файл.Расширение = Прав(Файл.Имя, СтрДлина(Файл.Имя) - Позиция);
	КонецЦикла;
	
	Объект.Наименование = СтрСоединить(Объект.Файлы.ВыгрузитьКолонку("Имя"), ", ");

КонецПроцедуры

Функция ВызватьHTTPМетод(Идентификатор = "", HTTPМетод = "GET", Данные = Неопределено, КодСостояния = 200)
	
	СоединениеHTTP = Новый HTTPСоединение("api.github.com", , , , , , Новый ЗащищенноеСоединениеOpenSSL);
	ЗапросHTTP = Новый HTTPЗапрос("/gists" + ?(ПустаяСтрока(Идентификатор), "", "/" + Идентификатор));
	ЗапросHTTP.Заголовки.Вставить("Accept", "application/vnd.github.v3+json");
	ЗапросHTTP.Заголовки.Вставить("Authorization", "token " + GistsПовтИсп.ТокенАвтора());
	Если Не Данные = Неопределено Тогда
		ЗапросHTTP.УстановитьТелоИзСтроки(Данные);
	КонецЕсли;
	
	ОтветHTTP = СоединениеHTTP.ВызватьHTTPМетод(HTTPМетод, ЗапросHTTP);
	
	Если Не ОтветHTTP.КодСостояния = КодСостояния Тогда
		ВызватьИсключение ОтветHTTP.КодСостояния;
	КонецЕсли;
	
	Возврат ОтветHTTP;
		
КонецФункции

Процедура УстановитьЗначениеСоответствия(Приемник, Источник, Поля)
	
	Для Каждого КлючЗначение Из Поля Цикл
		Значение = Источник.Получить(КлючЗначение.Значение);
		Если Не Значение = Неопределено Тогда
			Приемник[КлючЗначение.Ключ] = Значение;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли